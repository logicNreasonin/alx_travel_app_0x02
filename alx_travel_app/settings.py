"""
Django settings for alx_travel_app project.

Generated by 'django-admin startproject' using Django 4.2.21.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv
import environ
load_dotenv() # Loads variables from .env

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

CHAPA_SECRET_KEY = os.getenv('CHAPA_SECRET_KEY')

# Initialize django-environ
env = environ.Env(
    # Define types for environment variables, defaults if not found
    DEBUG=(bool, False), # DEBUG defaults to False and is treated as a boolean
    DATABASE_URL=(str, 'mysql://user:password@localhost:3306/dbname'), # Default DB URL format
    # Explicitly define other vars if not using URL format, though URL is recommended
    DATABASE_NAME=(str, ''),
    DATABASE_USER=(str, ''),
    DATABASE_PASSWORD=(str, ''),
    DATABASE_HOST=(str, 'localhost'),
    DATABASE_PORT=(str, ''), # Default to empty string lets Django use default port
    # CORS_ALLOW_ALL_ORIGINS=(bool, True), # Example CORS setting, or use list
)

# Celery Configuration
CELERY_BROKER_URL = env('CELERY_BROKER_URL', default='redis://localhost:6379/0')
CELERY_RESULT_BACKEND = env('CELERY_RESULT_BACKEND', default='redis://localhost:6379/0')
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# Attempt to read .env file from project root or BASE_DIR
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
# Fetch DEBUG from environment
DEBUG = env('DEBUG')

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=[]) # Fetch ALLOWED_HOSTS from env as a list


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party apps
    'rest_framework',       # Django REST Framework
    'corsheaders',          # Django CORS Headers
    'drf_yasg',             # Django REST Swagger/OpenAPI
    'celery',               # Celery (base package)

    # Local apps
    'listings',             # Your new app
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # CORS Middleware MUST come before CommonMiddleware
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'alx_travel_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'alx_travel_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# Using django-environ to read database config
# You can either use a DATABASE_URL like:
# DATABASE_URL=mysql://dbuser:dbpass@dbhost:dbport/dbname
# OR individual settings DATABASE_NAME, DATABASE_USER, etc.
# Using DATABASE_URL is often cleaner.
# Example using DATABASE_URL:
DATABASES = {
    'default': env.db(), # Reads DATABASE_URL and configures the default DB
}

# If you prefer individual settings, uncomment the section below
# and comment out the 'default': env.db() line above.
# Make sure DATABASE_NAME, USER, PASSWORD, HOST, PORT are set in .env
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': env('DATABASE_NAME'),
#         'USER': env('DATABASE_USER'),
#         'PASSWORD': env('DATABASE_PASSWORD'),
#         'HOST': env('DATABASE_HOST', default='localhost'),
#         'PORT': env('DATABASE_PORT', default=''), # Default port if empty
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'
TIME_ZONE = 'UTC'

CELERY_TIMEZONE = TIME_ZONE

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Django REST Framework settings (basic)
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny', # Or a more restrictive permission
    ]
}

# Django CORS Headers settings
# For development/testing, allow all origins
# In production, restrict to specific origins!
CORS_ALLOW_ALL_ORIGINS = True # Or use CORS_ALLOWED_ORIGINS for a list of allowed domains
# CORS_ALLOWED_ORIGINS = [
#     "https://example.com",
#     "https://sub.example.com",
#     "http://localhost:8080",
# ]

# DRF-YASG (Swagger) settings
# Optional: Configure Swagger UI appearance or other settings here
# SWAGGER_UI_SETTINGS = { ... }